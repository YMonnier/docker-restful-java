"use strict";angular.module("webApp",["ngRoute","ngRoute.middleware"]).value("authenticate",{val:!1}).config(["$routeProvider","$middlewareProvider",function(a,b){b.map({middlewareAuth:function(a){return console.log("test ..."),console.log(a),a.val===!0?this.next():(console.log("error"),void this.redirectTo("/login"))}}),a.when("/",{redirectTo:"/login"}).when("/persons",{templateUrl:"views/users.html",controller:"UsersCtrl",controllerAs:"users",middleware:"middlewareAuth"}).when("/channels",{templateUrl:"views/channels.html",controller:"ChannelsCtrl",controllerAs:"channels",middleware:"middlewareAuth"}).when("/channels/:id/:nickname",{templateUrl:"views/messages.html",controller:"MessagesCtrl",controllerAs:"messages",middleware:"middlewareAuth"}).when("/login",{templateUrl:"views/auth/login.html",controller:"LoginCtrl",controllerAs:"auth/login"}).when("/register",{templateUrl:"views/auth/register.html",controller:"RegisterCtrl",controllerAs:"auth/register"}).otherwise({redirectTo:"/"})}]).run(["$rootScope",function(a){a.apiURL="http://192.168.99.100:8080/littleapp/",a.wsURL="ws://127.0.0.1:8025/littleapp/ws/channel/",a.user={test:"test"}}]),angular.module("webApp").service("apiService",["$rootScope","$http",function(a,b){var c=function(){return{headers:{"Content-Type":"application/json",Authorization:a.user.token}}};this.auth=function(){const d=a.apiURL+"auth/";return{registration:function(a){return b.post(d+"register",a,c())},login:function(a){return b.post(d+"login",a,c())}}}(),this.users=function(){const d=a.apiURL+"users/";return{all:function(){return b.get(d,c())},create:function(a){return b.post(d,a,c())},update:function(a,e){return b.put(d+a,e,c())},"delete":function(a){return b["delete"](d+a)}}}(),this.channels=function(){const d=a.apiURL+"channels/";return{all:function(){return b.get(d,c())},create:function(a){return b.post(d,a,c())},"delete":function(a){return b["delete"](d+a,c())},messages:function(a){return b.get(d+a+"/messages",c())}}}(),this.isValid=function(a){return a.status>=200&&a.status<400}}]),angular.module("webApp").controller("UsersCtrl",["$scope","$rootScope","apiService",function(a,b,c){a.auth=b.user,a.users=[],a.errors=[];const d=function(b){b.status>=400&&(a.errors=b.data.errors)},e=function(){a.errors=[],$(".ui.modal").modal("show")};c.users.all().then(function(b){c.isValid(b)&&(a.users=b.data)},function(a){d(a)}),a.blankP={},a.reset=function(){a.user=angular.copy(a.blankP)}(),a.update=function(b){console.log(b),c.users.update(b.id,b).then(function(d){if(c.isValid(d)){var e=a.users.indexOf(b);e>-1&&(a.users[e]=d.data)}},function(a){d(a)})},a["delete"]=function(b){var e=a.users.indexOf(b);c.users["delete"](b.id).then(function(b){c.isValid(b)&&e>-1&&a.users.splice(e,1)},function(a){d(a)})},a.selection=function(b){console.log("$scope.selection"),console.log(b),a.user=b,e()}}]),angular.module("webApp").controller("ChannelsCtrl",["$scope","$rootScope","$location","apiService","channelParams",function(a,b,c,d,e){console.log("ChannelsCtrl"),console.log(window.location.host),a.channels=[],a.errors=[],a.channel={};var f={};const g=function(){a.channel=angular.copy(f)},h=function(b){b.status>=400&&(a.errors=b.data.errors)};a.showModal=function(){a.errors=[],g(),$(".ui.modal").modal("show")},d.channels.all().then(function(b){console.log("all channels"),console.log(b.data),d.isValid(b)&&(a.channels=b.data)},function(a){console.log(a),h(a)}),a.add=function(b){console.log(b),d.channels.create(b).then(function(b){console.log(b),d.isValid(b)&&a.channels.push(b.data)},function(a){h(a)})},a["delete"]=function(b){var c=a.channels.indexOf(b);d.channels["delete"](b.id).then(function(b){d.isValid(b)&&(console.log("response delete channel..."),console.log(b),c>-1&&a.channels.splice(c,1))},function(a){h(a)})},a.join=function(a){e.channel=a,c.path("/channels/"+a.id+"/"+b.user.nickname)}}]),angular.module("webApp").controller("LoginCtrl",["$rootScope","$scope","$location","apiService","authenticate",function(a,b,c,d,e){b.user={nickname:"ymonnier",password:"abcd123456"},b.processing=!1,b.errors=[],b.login=function(f){console.log(f),b.processing=!0,d.auth.login(f).then(function(f){b.error=[],d.isValid(f)?(console.log(f),b.processing=!1,e.val=!0,a.user=f.data,c.path("/persons")):b.processing=!1},function(a){console.log(a),a.errors?b.errors=a.errors:b.errors.push("Bad username or password. Please try again..."),b.processing=!1})}}]),angular.module("webApp").controller("RegisterCtrl",["$scope","$location","apiService",function(a,b,c){a.processing=!1,a.user={role:0},a.errors=[],a.register=function(e){a.processing=!0,console.log("register function"),console.log(e),d(e)?(console.log("VALID!"),c.auth.registration(e).then(function(d){a.error=[],c.isValid(d)&&(a.processing=!1,b.path("/login"))},function(b){console.log(b),b.errors?a.errors=b.errors:a.errors.push("Please try again..."),a.processing=!1})):a.processing=!1,console.log(a.errors)};var d=function(b){console.log("valid"),console.log(b);var c=!0;return b.nickname.length<4&&(c=!1,a.errors.push("The nickname is too short!")),b.password.length<8&&(c=!1,a.errors.push("The password must have a minimum of 8 characters.")),b.password!=b.password_confirmation&&(c=!1,a.errors.push("The password must be the same.")),0===b.address.length&&(c=!1,a.errors.push("The address must not be empty.")),c}}]),angular.module("webApp").service("channelParams",function(){}),angular.module("webApp").controller("MessagesCtrl",["$scope","$rootScope","$routeParams","apiService",function(a,b,c,d){const e={SERVER:"SERVER",CLIENT:"CLIENT"};a.msgs=[],a.processing=!0;var f=function(a,b,c){return{date:a,user:{nickname:b},content:c}};d.channels.messages(c.id).then(function(b){d.isValid(b)&&(a.processing=!1,b.data&&(a.msgs=b.data))},function(b){a.processing=!1});var g=new WebSocket(b.wsURL+c.id+"/"+b.user.nickname);g.onopen=function(a){console.log("on open..."),console.log(a)},g.onmessage=function(a){console.log("message..."),console.log(a),a.data&&h(a.data)},g.onerror=function(a){console.log("on error..."),console.log(a)},a.send=function(d){if(console.log("send function..."),d){console.log(d);var e=JSON.stringify({content:d,channel_id:c.id,user_id:b.user.id});console.log(e),g.send(e),a.message=""}};var h=function(b){var c;if(c=JSON.parse(b)){console.log(c);var d=c.content;c.from===e.SERVER?i(f(d.date,"Server",d.content)):c.from===e.CLIENT&&i(f(d.date,d.nickname,d.content))}console.log(a.msgs)},i=function(b){console.log("ADDDDDD"),console.log(b),a.$apply(function(){a.msgs.push(b)})}}]),angular.module("webApp").run(["$templateCache",function(a){a.put("views/auth/login.html",'<div class="ui middle aligned center aligned grid"> <div ng-include="auth_errors.html"></div> <div class="column"> <h2 class="ui blue image header"> <div class="content"> Log-in to your account </div> </h2> <div class="ui error message" ng-class="{hidden: errors.length === 0}"> <i class="close icon"></i> <div class="header"> There were some errors with your submission </div> <ul class="list"> <li ng-repeat="error in errors">{{error}}</li> </ul> </div> <form name="form" class="ui large form" ng-class="{loading: processing}"> <div class="ui stacked segment"> <div class="field"> <div class="ui left icon input"> <i class="user icon"></i> <input type="text" ng-model="user.nickname" placeholder="Username" required> </div> </div> <div class="field"> <div class="ui left icon input"> <i class="lock icon"></i> <input type="password" ng-model="user.password" placeholder="Password" required> </div> </div> <div class="ui fluid large blue submit button" ng-class="{disabled: form.$error.required}" ng-click="login(user)">Login </div> </div> <div class="ui error message"></div> </form> <div class="ui message"> New to us? <a ng-href="#!/register">Sign Up</a> </div> </div> </div>'),a.put("views/auth/register.html",'<h2 class="ui blue image header"> <div class="content"> Registration </div> </h2> <div class="ui error message" ng-class="{hidden: errors.length === 0}"> <i class="close icon"></i> <div class="header"> There were some errors with your submission </div> <ul class="list"> <li ng-repeat="error in errors">{{error}}</li> </ul> </div> <form name="form" class="ui large form" ng-class="{loading: processing}" novalidate> <div class="ui stacked segment"> <div class="field"> <div class="ui left icon input"> <i class="user icon"></i> <input type="text" ng-model="user.nickname" placeholder="Nickname" required> </div> </div> <div class="field"> <div class="ui left icon input"> <i class="lock icon"></i> <input type="password" ng-model="user.password" placeholder="Password" required> </div> </div> <div class="field"> <div class="ui left icon input"> <i class="lock icon"></i> <input type="password" ng-model="user.password_confirmation" placeholder="Password confirmation" required> </div> </div> <div class="field"> <div class="ui left icon input"> <i class="home icon"></i> <input type="text" ng-model="user.address" placeholder="Address" required> </div> </div> <div class="ui fluid large blue submit button" ng-class="{disabled: form.$error.required}" ng-click="register(user)">Register</div> </div> <div class="ui error message"></div> </form>'),a.put("views/channels.html",'<div class="ui error message" ng-class="{hidden: errors.length === 0}"> <i class="close icon"></i> <div class="header"> There were some errors with your submission </div> <ul class="list"> <li ng-repeat="error in errors">{{error}}</li> </ul> </div> <button class="ui primary button" ng-click="showModal()"> New Channel </button> <table class="ui single line table"> <thead> <tr> <th>Channel</th> <th>Created By</th> <th></th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="channel in channels"> <td>{{channel.name}}</td> <td>{{channel.user.nickname}}</td> <td ng-show="user.id === channel.user.id"><i class="remove icon" ng-click="delete(channel)"></i></td> <td><i class="commenting icon" ng-click="join(channel)"></i></td> </tr> </tbody> </table> <div class="ui modal"> <i class="close icon"></i> <div class="header"> Adding </div> <div class="content"> <form class="ui form"> <div class="field"> <label>Name</label> <input type="text" ng-model="channel.name" placeholder="Channel name..."> </div> </form> </div> <div class="actions"> <div class="ui black deny button"> Cancel </div> <div class="ui positive right labeled icon button" ng-click="add(channel)"> Submit <i class="checkmark icon"></i> </div> </div> </div>'),a.put("views/include/auth_error.html",'<div class="ui error message" ng-class="{hidden: authenticate.hidden === 0}"> <i class="close icon"></i> <div class="header"> You must be authenticate! </div> </div>'),a.put("views/messages.html",'<div id="messages"> <div class="chat"> <div class="ui feed"> <div class="event" ng-repeat="msg in msgs"> <div class="content"> <div class="summary"> {{msg.user.nickname}} <div class="date"> {{msg.date}} </div> </div> <div class="extra text"> {{msg.content}} </div> </div> </div> </div> </div> <form name="form" ng-submit="send(message)" ng-class="{loading: processing}"> <input class="textarea" type="text" ng-model="message" ng-class="{disabled: form.$error.required}" placeholder="You message..."> </form> </div>'),a.put("views/users.html",'<div class="ui error message" ng-class="{hidden: errors.length === 0}"> <i class="close icon"></i> <div class="header"> There were some errors with your submission </div> <ul class="list"> <li ng-repeat="error in errors">{{error}}</li> </ul> </div> <table class="ui single line table"> <thead> <tr> <th></th> <th>Name</th> <th>Address</th> <th></th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="user in users"> <td><i class="user icon"></i></td> <td>{{user.nickname}}</td> <td>{{user.address}}</td> <td ng-show="auth.id === user.id"><i class="edit icon" ng-click="selection(user)"></i></td> <td ng-show="auth.role === 1"><i class="remove icon" ng-click="delete(user)"></i></td> </tr> </tbody> </table> <div class="ui modal"> <i class="close icon"></i> <div class="header"> Adding </div> <div class="content"> <form class="ui form"> <div class="field"> <label>Name</label> <input type="text" ng-model="user.nickname" placeholder="Name..."> </div> <div class="field"> <label>Address</label> <input type="text" ng-model="user.address" placeholder="Address.."> </div> </form> </div> <div class="actions"> <div class="ui black deny button"> Cancel </div> <div class="ui positive right labeled icon button" ng-click="update(user)"> Submit <i class="checkmark icon"></i> </div> </div> </div>')}]);
